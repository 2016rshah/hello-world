{"filter":false,"title":"helloworld.js","tooltip":"/helloworld/helloworld.js","undoManager":{"mark":1,"position":1,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":45}},"text":"// Three.js ray.intersects with offset canvas"},{"action":"insertText","range":{"start":{"row":0,"column":45},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":99,"column":0}},"lines":["","// WestLangley","","// three.js r.58","","var container, camera, scene, renderer, mesh,","","    mouse = { x: 0, y: 0 },","    objects = [],","    ","    count = 0,","","    CANVAS_WIDTH = 200,","    CANVAS_HEIGHT = 200;","","// info","info = document.createElement( 'div' );","info.style.position = 'absolute';","info.style.top = '30px';","info.style.width = '100%';","info.style.textAlign = 'center';","info.style.color = '#f00';","info.style.backgroundColor = 'transparent';","info.style.zIndex = '1';","info.style.fontFamily = 'Monospace';","info.innerHTML = 'INTERSECT Count: ' + count;","info.style.userSelect = \"none\";","info.style.webkitUserSelect = \"none\";","info.style.MozUserSelect = \"none\";","document.body.appendChild( info );","","container = document.getElementById( 'canvas' );","document.body.appendChild( container );","","renderer = new THREE.WebGLRenderer();","renderer.setSize( CANVAS_WIDTH, CANVAS_HEIGHT );","container.appendChild( renderer.domElement );","","scene = new THREE.Scene();","","camera = new THREE.PerspectiveCamera( 70, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000 );","camera.position.y = 150;","camera.position.z = 500;","camera.lookAt( scene.position );","scene.add( camera );","","mesh = new THREE.Mesh( ","    new THREE.CubeGeometry( 200, 200, 200, 1, 1, 1 ), ","    new THREE.MeshBasicMaterial( { color : 0xff0000, wireframe: true } ",") );","scene.add( mesh );","objects.push( mesh );","","// find intersections","var projector = new THREE.Projector();","","// mouse listener","document.addEventListener( 'mousedown', function( event ) {","    ","    // For the following method to work correctly, set the canvas position *static*; margin > 0 and padding > 0 are OK","    mouse.x = ( ( event.clientX - renderer.domElement.offsetLeft ) / renderer.domElement.width ) * 2 - 1;","    mouse.y = - ( ( event.clientY - renderer.domElement.offsetTop ) / renderer.domElement.height ) * 2 + 1;","    ","    // For this alternate method, set the canvas position *fixed*; set top > 0, set left > 0; padding must be 0; margin > 0 is OK","    //mouse.x = ( ( event.clientX - container.offsetLeft ) / container.clientWidth ) * 2 - 1;","    //mouse.y = - ( ( event.clientY - container.offsetTop ) / container.clientHeight ) * 2 + 1;","","    var vector = new THREE.Vector3( mouse.x, mouse.y, 1 );","    projector.unprojectVector( vector, camera );","","    var raycaster = new THREE.Raycaster( camera.position, vector.sub( camera.position ).normalize() );","","    intersects = raycaster.intersectObjects( objects );","","    if ( intersects.length > 0 ) {","        ","        info.innerHTML = 'INTERSECT Count: ' + ++count;","        ","    }","","}, false );","","function render() {","","    mesh.rotation.y += 0.01;","    ","    renderer.render( scene, camera );","","}","","(function animate() {","","    requestAnimationFrame( animate );","","    render();","","})();",""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":102,"column":0}},"nl":"\n","lines":["// Three.js ray.intersects with offset canvas","","// WestLangley","","// three.js r.58","","var container, camera, scene, renderer, mesh,","","    mouse = { x: 0, y: 0 },","    objects = [],","    ","    count = 0,","","    CANVAS_WIDTH = 200,","    CANVAS_HEIGHT = 200;","","// info","info = document.createElement( 'div' );","info.style.position = 'absolute';","info.style.top = '30px';","info.style.width = '100%';","info.style.textAlign = 'center';","info.style.color = '#f00';","info.style.backgroundColor = 'transparent';","info.style.zIndex = '1';","info.style.fontFamily = 'Monospace';","info.innerHTML = 'INTERSECT Count: ' + count;","info.style.userSelect = \"none\";","info.style.webkitUserSelect = \"none\";","info.style.MozUserSelect = \"none\";","document.body.appendChild( info );","","container = document.getElementById( 'canvas' );","document.body.appendChild( container );","","renderer = new THREE.WebGLRenderer();","renderer.setSize( CANVAS_WIDTH, CANVAS_HEIGHT );","container.appendChild( renderer.domElement );","","scene = new THREE.Scene();","","camera = new THREE.PerspectiveCamera( 70, CANVAS_WIDTH / CANVAS_HEIGHT, 1, 1000 );","camera.position.y = 150;","camera.position.z = 500;","camera.lookAt( scene.position );","scene.add( camera );","","mesh = new THREE.Mesh( ","    new THREE.CubeGeometry( 200, 200, 200, 1, 1, 1 ), ","    new THREE.MeshBasicMaterial( { color : 0xff0000, wireframe: true } ",") );","scene.add( mesh );","objects.push( mesh );","","// find intersections","var projector = new THREE.Projector();","","// mouse listener","document.addEventListener( 'mousedown', function( event ) {","    ","    // For the following method to work correctly, set the canvas position *static*; margin > 0 and padding > 0 are OK","    mouse.x = ( ( event.clientX - renderer.domElement.offsetLeft ) / renderer.domElement.width ) * 2 - 1;","    mouse.y = - ( ( event.clientY - renderer.domElement.offsetTop ) / renderer.domElement.height ) * 2 + 1;","    ","    // For this alternate method, set the canvas position *fixed*; set top > 0, set left > 0; padding must be 0; margin > 0 is OK","    //mouse.x = ( ( event.clientX - container.offsetLeft ) / container.clientWidth ) * 2 - 1;","    //mouse.y = - ( ( event.clientY - container.offsetTop ) / container.clientHeight ) * 2 + 1;","","    var vector = new THREE.Vector3( mouse.x, mouse.y, 1 );","    projector.unprojectVector( vector, camera );","","    var raycaster = new THREE.Raycaster( camera.position, vector.sub( camera.position ).normalize() );","","    intersects = raycaster.intersectObjects( objects );","","    if ( intersects.length > 0 ) {","        ","        info.innerHTML = 'INTERSECT Count: ' + ++count;","        ","    }","","}, false );","","function render() {","","    mesh.rotation.y += 0.01;","    ","    renderer.render( scene, camera );","","}","","(function animate() {","","    requestAnimationFrame( animate );","","    render();","","})();","","","",""]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1412385404470,"hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709"}